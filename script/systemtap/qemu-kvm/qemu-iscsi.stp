/**
 * # stap --ldd qemu-iscsi.stp
 */
probe begin {
    printf("begin probe qemu iscsi\n")
}

probe process("/usr/bin/qemu-system-x86_64").function("virtio_scsi_handle_cmd_req_submit") {
    printf("virtio_scsi_handle_cmd_req_submit cdb:0x%0x\n",
           user_char($req->sreq->cmd->buf) & 0xff)
}

probe process("/usr/bin/qemu-system-x86_64").function("virtio_scsi_command_complete") {
    printf("virtio_scsi_command_complete cdb:0x%x\n", user_char($r->cmd->buf) & 0xff)
}

probe process("/usr/bin/qemu-system-x86_64").function("iscsi_co_writev_flags") {
    printf("iscsi_co_writev_flags sector_num:%d nb_sectors:%d\n", $sector_num, $nb_sectors)
    print_ubacktrace()
}

probe process("/usr/bin/qemu-system-x86_64").function("iscsi_co_pwrite_zeroes") {
    printf("iscsi_co_pwrite_zeroes offset:%d count:%d\n", $offset, $count)
}


probe process("/usr/bin/qemu-system-x86_64").function("iscsi_co_pdiscard") {
    printf("iscsi_co_pdiscard offset:%d count:%d\n", $offset, $count)
}

probe process("/usr/bin/qemu-system-x86_64").function("iscsi_co_flush") {
    printf("iscsi_co_flush\n")
}
